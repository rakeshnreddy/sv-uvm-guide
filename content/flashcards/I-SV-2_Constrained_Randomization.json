[
  {
    "id": "cr-1",
    "question": "What does a soft constraint do?",
    "answer": "A soft constraint supplies a default value that can be overridden by stronger constraints or inline `with` clauses."
  },
  {
    "id": "cr-2",
    "question": "How do you randomize a class instance with additional run-time restrictions?",
    "answer": "Call `object.randomize() with { ... }` to apply inline constraints for that specific randomization." 
  },
  {
    "id": "cr-3",
    "question": "Why should you always check the return value of `randomize()`?",
    "answer": "Because over-constrained or illegal combinations cause the solver to return 0; checking prevents propagating invalid stimulus." 
  },
  {
    "id": "cr-4",
    "question": "When is `randc` preferable to `rand`?",
    "answer": "Use `randc` when you need to hit every value in a finite set without repetition, such as generating all opcodes before repeating." 
  }
]
