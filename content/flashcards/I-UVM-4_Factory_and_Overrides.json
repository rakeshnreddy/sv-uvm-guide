[
  {
    "id": "uvm4-register",
    "question": "What two actions must you perform before an override can succeed?",
    "answer": "Register the class with `uvm_*_utils` and construct it through `::type_id::create` so the factory can intercept creation." 
  },
  {
    "id": "uvm4-type-vs-inst",
    "question": "When would you choose a type override instead of an instance override?",
    "answer": "Use a type override when every instantiation of a base class should swap to a new implementation across the entire environment." 
  },
  {
    "id": "uvm4-instance",
    "question": "How do you limit an override to a single component path?",
    "answer": "Call `set_inst_override_by_type` (or `set_inst_override`) with the target path, optionally using wildcards like `*.env.drv`." 
  },
  {
    "id": "uvm4-debug",
    "question": "Which factory utility helps you confirm the active override mappings?",
    "answer": "`uvm_factory::get().print()` (or `uvm_top.print_topology()`) dumps the current type-to-implementation assignments." 
  },
  {
    "id": "uvm4-ordering",
    "question": "When must overrides be applied relative to component construction?",
    "answer": "Before the target component's `build_phase` runsâ€”typically in the test or a virtual sequence prior to calling `run_test()`." 
  }
]
