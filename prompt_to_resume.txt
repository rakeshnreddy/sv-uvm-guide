**SV/UVM Guide – Resume Notes**

**Recent Progress (Session 2025-10-08)**
- Removed the Next.js build guards (`ignoreDuringBuilds`, `ignoreBuildErrors`) so lint/type errors now fail CI (`next.config.mjs`).
- Added coverage for the feature-flag system: unit specs in `tests/tools/featureFlags.spec.ts`, gated-route tests in `tests/app/feature-gating.spec.tsx`, and a Playwright smoke in `tests/e2e/feature-flags.spec.ts`.
- Lazy-loaded every Monaco/D3/Recharts-heavy surface with `next/dynamic` (curriculum embeds, knowledge hub, hero, assessment dashboards, practice visualizations, legacy docs) and documented the rollout in `docs/planning/Actionable-Task-Plan.md`.
- Created an opt-in override for integration runs: `FEATURE_FLAGS_FORCE_ON=true` now forces all flags on, and `scripts/run-e2e-tests.cjs`/`playwright.config.ts` set that plus the individual `NEXT_PUBLIC_FEATURE_FLAG_*` vars.
- Updated the Learning-First audit and de-scope proposal to note the new override workflow; refreshed `prompt_to_resume.txt` with the latest context.

**Environment & Testing Notes**
- Commands: `npm run lint`, `npm run test`, `npm run build` all pass locally.
- Use `npm run test:e2e` (now calls `node scripts/run-e2e-tests.cjs`) for full Playwright coverage; it builds with all feature flags enabled before executing tests.
- Individual flag toggles still work via `NEXT_PUBLIC_FEATURE_FLAG_<FLAG>`; set `FEATURE_FLAGS_FORCE_ON=true` to light up every gated route without adjusting each flag.

**Outstanding Issues**
- Playwright is still red on your machine (19 failing specs across curriculum/exercise/navigation suites). Most failures mirror missing UI affordances that rely on the forced-on mock surfaces.
  - Grab the latest `test-results/**/error-context.md` snapshots or run `npx playwright show-report` after `npm run test:e2e` to inspect which selectors are breaking.
  - Likely causes: stale locators expecting old copy/spinners, or additional waits needed now that Monaco/d3 chunks load lazily.
- Milestone [P2] (refactor D3 imports for tree-shaking) and [P3] (standardize charting) remain untouched. E2E stabilisation (Milestone 4) is still pending once the current regressions are understood.

**Suggested Next Steps**
1. Triage the failing Playwright specs with the saved `test-results` artifacts. Confirm each failure is a selector/delay issue vs. a gated page still returning `notFound`. Patch selectors or add waits where needed; keep `FEATURE_FLAGS_FORCE_ON=true` in the env while iterating.
2. After the suites are green, re-run `npm run test:e2e` and capture the `playwright-report` for future regressions.
3. Pick up Milestone [P2]: replace `import * as d3` with modular imports across `components/diagrams` and `components/assessment`, then circle back to [P3] if time allows.
4. Once E2E is stable, plan Milestone 4 tasks (locator tightening, flaky strict-mode fixes) or proceed to the remaining performance work.

**Reminders**
- Keep feature work paused until Milestones 1–4 are complete.
- Document any future gating changes in `docs/feedback/Learning-First-Audit.md` so the audit stays the source of truth.
- Before pushing, run: `npm run lint`, `npm run test`, `npm run build`, and `npm run test:e2e` with the new script.
