<svg width="800" height="600" viewBox="0 0 850 650" xmlns="http://www.w3.org/2000/svg" font-family="Arial, sans-serif" font-size="14px">
  <style>
    .block { stroke: #333; stroke-width: 1.5; fill: #f0f0f0; }
    /* TODO: Adapt these styles to be more Tailwind-friendly or controlled by the React component if SVGR is used */
    /* For example, instead of direct fill colors, use classes and define these in globals.css or via Tailwind theme */
    /* Default block fill: can use a class like .svg-block-default and define its fill */
    /* Default label fill: can use a class like .svg-label-default */

    /* Theming for dark mode would ideally be handled by SVGR component props or CSS variables affected by dark class */
    .dark .block { stroke: #8892B0; fill: #1E2D4B; } /* Example dark theme for blocks */
    .dark .label { fill: #CCD6F6; } /* Example dark theme for labels */
    .dark .line { stroke: #8892B0; }
    .dark .line marker polygon { fill: #8892B0; }
    .dark .data-flow { stroke: #64FFDA; } /* Accent color for data flow */
    .dark .data-flow marker polygon { fill: #64FFDA; }


    .label { text-anchor: middle; fill: #111; }
    .line { stroke: #555; stroke-width: 1; marker-end: url(#arrowhead); }
    .data-flow { stroke: #007bff; stroke-width: 1.5; marker-end: url(#arrowhead-data); }
    .passive { stroke-dasharray: 4 2; }
  </style>

  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#555" />
    </marker>
    <marker id="arrowhead-data" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#007bff" />
    </marker>
  </defs>

  {/* Components - Added some conceptual classes for potential Tailwind styling via globals.css if not using SVGR prop mapping */}
  <g id="test" data-description="The Test instantiates the environment and sequences, and configures the testbench." className="svg-group">
    <rect x="325" y="20" width="200" height="60" rx="5" className="block svg-block-test" />
    <text x="425" y="55" className="label svg-label-test font-body">Test (uvm_test)</text>
  </g>

  <g id="environment" data-description="The Environment (Env) encapsulates agents, scoreboards, and other environment components." className="svg-group">
    <rect x="50" y="120" width="750" height="400" rx="5" className="block svg-block-environment" style="fill: #e6f3ff;" />
    <text x="425" y="145" className="label svg-label-environment font-body">Environment (uvm_env)</text>
  </g>

  <g id="agent-active" data-description="The Active Agent drives stimulus to the DUT and may monitor its outputs." className="svg-group">
    <rect x="100" y="180" width="300" height="150" rx="5" className="block svg-block-agent-active" style="fill: #fff0e6;" />
    <text x="250" y="200" className="label svg-label-agent-active font-body">Agent (Active)</text>
  </g>

  <g id="sequencer" data-description="The Sequencer controls the flow of sequence items to the Driver." className="svg-group">
    <rect x="120" y="220" width="120" height="50" rx="5" className="block svg-block-sequencer" />
    <text x="180" y="250" className="label svg-label-sequencer font-body">Sequencer</text>
  </g>

  <g id="driver" data-description="The Driver converts sequence items into pin-level activity on the DUT interface." className="svg-group">
    <rect x="120" y="290" width="120" height="50" rx="5" className="block svg-block-driver" />
    <text x="180" y="320" className="label svg-label-driver font-body">Driver</text>
  </g>

  <g id="monitor-active" data-description="The Active Monitor observes DUT interface signals, typically associated with the active agent." className="svg-group">
    <rect x="260" y="220" width="120" height="50" rx="5" className="block svg-block-monitor-active" />
    <text x="320" y="250" className="label svg-label-monitor-active font-body">Monitor (Active)</text>
  </g>

  <g id="agent-passive" data-description="The Passive Agent only monitors DUT interfaces and does not drive stimulus." className="svg-group">
    <rect x="450" y="180" width="300" height="100" rx="5" className="block passive svg-block-agent-passive" style="fill: #e6ffe6;" />
    <text x="600" y="200" className="label svg-label-agent-passive font-body">Agent (Passive)</text>
  </g>

  <g id="monitor-passive" data-description="The Passive Monitor observes DUT interface signals, typically for checking or coverage." className="svg-group">
    <rect x="540" y="220" width="120" height="50" rx="5" className="block passive svg-block-monitor-passive" />
    <text x="600" y="250" className="label svg-label-monitor-passive font-body">Monitor (Passive)</text>
  </g>

  <g id="scoreboard" data-description="The Scoreboard checks the DUT's behavior by comparing expected data (often from monitors) against actual data." className="svg-group">
    <rect x="325" y="400" width="200" height="60" rx="5" className="block svg-block-scoreboard" style="fill: #fffde6;" />
    <text x="425" y="435" className="label svg-label-scoreboard font-body">Scoreboard</text>
  </g>

  {/* Connections */}
  <line x1="425" y1="80" x2="425" y2="120" className="line" /> {/* Test to Env */}

  {/* Active Agent Connections */}
  <line x1="180" y1="270" x2="180" y2="290" className="data-flow" /> {/* Sequencer to Driver */}
  <line x1="180" y1="340" x2="180" y2="370" className="data-flow" /> {/* Driver to DUT (conceptual) */}
  <text x="190" y="365" font-size="12px" fill="#007bff" className="font-mono">DUT I/F</text>

  <line x1="320" y1="270" x2="320" y2="300" className="data-flow passive" /> {/* Monitor (Active) from DUT (conceptual) */}
  <text x="330" y="295" font-size="12px" fill="#007bff" className="font-mono">DUT I/F</text>
  <line x1="320" y1="300" x2="425" y2="400" className="data-flow" /> {/* Monitor (Active) to Scoreboard */}

  {/* Passive Agent Connections */}
  <line x1="600" y1="270" x2="600" y2="300" className="data-flow passive" /> {/* Monitor (Passive) from DUT (conceptual) */}
  <text x="610" y="295" font-size="12px" fill="#007bff" className="font-mono">DUT I/F</text>
  <line x1="600" y1="300" x2="425" y2="400" className="data-flow" /> {/* Monitor (Passive) to Scoreboard */}

  {/* Env to Agent connections (conceptual hierarchy) */}
  <path d="M 425 165 Q 250 160 250 180" stroke="#aaa" stroke-width="1" fill="none" />
  <path d="M 425 165 Q 600 160 600 180" stroke="#aaa" stroke-width="1" fill="none" />
  <path d="M 425 380 Q 425 390 425 400" stroke="#aaa" stroke-width="1" fill="none" />
</svg>
